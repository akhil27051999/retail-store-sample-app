AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC with 6 subnets - 2 Web (Public), 2 App (Private), 2 Data (Private) with NAT Gateway'

Parameters:
  VpcCidr:
    Type: String
    Default: '192.168.0.0/16'
    Description: CIDR block for VPC
  
  WebSubnet1Cidr:
    Type: String
    Default: '192.168.1.0/24'
    Description: CIDR block for Web Subnet 1
  
  WebSubnet2Cidr:
    Type: String
    Default: '192.168.2.0/24'
    Description: CIDR block for Web Subnet 2
  
  AppSubnet1Cidr:
    Type: String
    Default: '192.168.3.0/24'
    Description: CIDR block for App Subnet 1
  
  AppSubnet2Cidr:
    Type: String
    Default: '192.168.4.0/24'
    Description: CIDR block for App Subnet 2
  
  DataSubnet1Cidr:
    Type: String
    Default: '192.168.5.0/24'
    Description: CIDR block for Data Subnet 1
  
  DataSubnet2Cidr:
    Type: String
    Default: '192.168.6.0/24'
    Description: CIDR block for Data Subnet 2

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: RetailStore-VPC

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: RetailStore-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Web Subnets (Public)
  WebSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref WebSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Web-Subnet-1

  WebSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref WebSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Web-Subnet-2

  # App Subnets (Private)
  AppSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref AppSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: App-Subnet-1

  AppSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref AppSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: App-Subnet-2

  # Data Subnets (Private)
  DataSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DataSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: Data-Subnet-1

  DataSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DataSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: Data-Subnet-2

  # NAT Gateway
  NATGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref WebSubnet1
      Tags:
        - Key: Name
          Value: RetailStore-NAT

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public-RouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private-RouteTable

  DataRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Data-RouteTable

  # Routes
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway

  # Subnet Route Table Associations
  WebSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WebSubnet1
      RouteTableId: !Ref PublicRouteTable

  WebSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WebSubnet2
      RouteTableId: !Ref PublicRouteTable

  AppSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppSubnet1
      RouteTableId: !Ref PrivateRouteTable

  AppSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppSubnet2
      RouteTableId: !Ref PrivateRouteTable

  DataSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DataSubnet1
      RouteTableId: !Ref DataRouteTable

  DataSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DataSubnet2
      RouteTableId: !Ref DataRouteTable

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC-ID'

  WebSubnet1Id:
    Description: Web Subnet 1 ID
    Value: !Ref WebSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-WebSubnet1-ID'

  WebSubnet2Id:
    Description: Web Subnet 2 ID
    Value: !Ref WebSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-WebSubnet2-ID'

  AppSubnet1Id:
    Description: App Subnet 1 ID
    Value: !Ref AppSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-AppSubnet1-ID'

  AppSubnet2Id:
    Description: App Subnet 2 ID
    Value: !Ref AppSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-AppSubnet2-ID'

  DataSubnet1Id:
    Description: Data Subnet 1 ID
    Value: !Ref DataSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-DataSubnet1-ID'

  DataSubnet2Id:
    Description: Data Subnet 2 ID
    Value: !Ref DataSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-DataSubnet2-ID'