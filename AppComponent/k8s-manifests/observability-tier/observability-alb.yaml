---
# Observability Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: retail-observability
  labels:
    name: retail-observability
    tier: observability

---
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: retail-observability
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--web.enable-lifecycle'
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config

---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: retail-observability
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
  type: ClusterIP

---
# Prometheus ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: retail-observability
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true

---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: retail-observability
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_SERVER_ROOT_URL
          value: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "true"

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: retail-observability
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP

---
# ArgoCD Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: retail-observability
  labels:
    app: argocd-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argocd-server
  template:
    metadata:
      labels:
        app: argocd-server
    spec:
      containers:
      - name: argocd-server
        image: argoproj/argocd:latest
        ports:
        - containerPort: 8080
        - containerPort: 8083
        command:
        - argocd-server
        - --staticassets
        - /shared/app
        - --insecure
        - --rootpath
        - /argocd

---
# ArgoCD Service
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: retail-observability
spec:
  selector:
    app: argocd-server
  ports:
    - name: server
      port: 8080
      targetPort: 8080
    - name: grpc
      port: 8083
      targetPort: 8083
  type: ClusterIP

---
# Kubernetes Dashboard Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-dashboard
  namespace: retail-observability
  labels:
    app: kubernetes-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-dashboard
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
    spec:
      containers:
      - name: kubernetes-dashboard
        image: kubernetesui/dashboard:latest
        ports:
        - containerPort: 8443
        args:
          - --auto-generate-certificates
          - --namespace=retail-observability
          - --enable-skip-login
          - --disable-settings-authorizer

---
# Kubernetes Dashboard Service
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard
  namespace: retail-observability
spec:
  selector:
    app: kubernetes-dashboard
  ports:
    - port: 8443
      targetPort: 8443
  type: ClusterIP

---
# ALB Ingress for Observability
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: observability-alb
  namespace: retail-observability
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: observability
    alb.ingress.kubernetes.io/group.order: '100'
spec:
  rules:
  - http:
      paths:
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
      - path: /argocd
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 8080
      - path: /dashboard
        pathType: Prefix
        backend:
          service:
            name: kubernetes-dashboard
            port:
              number: 8443

---
# ServiceAccount for Dashboard
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dashboard-admin
  namespace: retail-observability

---
# ClusterRoleBinding for Dashboard
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dashboard-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: dashboard-admin
  namespace: retail-observability