# Data Tier - Databases and Storage
---
# Catalog MySQL Database
apiVersion: v1
kind: Secret
metadata:
  name: catalog-db
  namespace: retail-data
data:
  RETAIL_CATALOG_PERSISTENCE_USER: "Y2F0YWxvZw=="
  RETAIL_CATALOG_PERSISTENCE_PASSWORD: "cTVVRjVmZ0Q0bkhxVVhJMg=="
---
apiVersion: v1
kind: Service
metadata:
  name: catalog-mysql
  namespace: retail-data
  labels:
    app.kubernetes.io/name: catalog
    app.kubernetes.io/component: mysql
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: mysql
      protocol: TCP
      name: mysql
  selector:
    app.kubernetes.io/name: catalog
    app.kubernetes.io/component: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: catalog-mysql
  namespace: retail-data
  labels:
    app.kubernetes.io/name: catalog
    app.kubernetes.io/component: mysql
spec:
  replicas: 1
  serviceName: catalog-mysql
  selector:
    matchLabels:
      app.kubernetes.io/name: catalog
      app.kubernetes.io/component: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: catalog
        app.kubernetes.io/component: mysql
    spec:
      containers:
        - name: mysql
          image: "public.ecr.aws/docker/library/mysql:8.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: my-secret-pw
            - name: MYSQL_DATABASE
              value: catalog
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: catalog-db
                  key: RETAIL_CATALOG_PERSISTENCE_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: catalog-db
                  key: RETAIL_CATALOG_PERSISTENCE_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
      volumes:
      - name: data
        emptyDir: {}
---
# Cart DynamoDB Local
apiVersion: v1
kind: Service
metadata:
  name: carts-dynamodb
  namespace: retail-data
  labels:
    app.kubernetes.io/name: carts
    app.kubernetes.io/component: dynamodb
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: dynamodb
      protocol: TCP
      name: dynamodb
  selector:
    app.kubernetes.io/name: carts
    app.kubernetes.io/component: dynamodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts-dynamodb
  namespace: retail-data
  labels:
    app.kubernetes.io/name: carts
    app.kubernetes.io/component: dynamodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: carts
      app.kubernetes.io/component: dynamodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: carts
        app.kubernetes.io/component: dynamodb
    spec:
      containers:
        - name: dynamodb
          image: "public.ecr.aws/aws-dynamodb-local/aws-dynamodb-local:1.25.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: dynamodb
              containerPort: 8000
              protocol: TCP